{"version":3,"file":"commonHelpers.js","sources":["../src/js/01-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst input = document.querySelector('#datetime-picker');\n\nlet userSelectedDate;\nlet options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        timeout: 4000,\n        progressBar: false,\n        layout: 2,\n      });\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nstartBtn.addEventListener('click', onStartClick);\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\n\nlet intervalId;\nfunction onStartClick() {\n  startBtn.disabled = true;\n  input.disabled = true;\n  intervalId = setInterval(() => {\n    const diff = userSelectedDate.getTime() - Date.now();\n    if (diff <= 0) {\n      clearInterval(intervalId);\n      startBtn.disabled = false;\n      input.disabled = false;\n    } else {\n      const time = convertMs(diff);\n      days.textContent = time.days;\n      hours.textContent = time.hours;\n      minutes.textContent = time.minutes;\n      seconds.textContent = time.seconds;\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day)\n    .toString()\n    .padStart(2, '0');\n  const hours = Math.floor((ms % day) / hour)\n    .toString()\n    .padStart(2, '0');\n  const minutes = Math.floor(((ms % day) % hour) / minute)\n    .toString()\n    .padStart(2, '0');\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second)\n    .toString()\n    .padStart(2, '0');\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["startBtn","input","userSelectedDate","options","selectedDates","iziToast","flatpickr","onStartClick","days","hours","minutes","seconds","intervalId","diff","time","convertMs","ms"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAQ,SAAS,cAAc,kBAAkB,EAEvD,IAAIC,EACAC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,GAC7BF,GAAoB,IAAI,KAC1BG,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,WACV,QAAS,IACT,YAAa,GACb,OAAQ,CAChB,CAAO,EAEDL,EAAS,SAAW,EAEvB,CACH,EAEAM,EAAU,mBAAoBH,CAAO,EAErCH,EAAS,iBAAiB,QAASO,CAAY,EAC/C,MAAMC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAEvD,IAAIC,EACJ,SAASL,GAAe,CACtBP,EAAS,SAAW,GACpBC,EAAM,SAAW,GACjBW,EAAa,YAAY,IAAM,CAC7B,MAAMC,EAAOX,EAAiB,QAAS,EAAG,KAAK,IAAG,EAClD,GAAIW,GAAQ,EACV,cAAcD,CAAU,EACxBZ,EAAS,SAAW,GACpBC,EAAM,SAAW,OACZ,CACL,MAAMa,EAAOC,EAAUF,CAAI,EAC3BL,EAAK,YAAcM,EAAK,KACxBL,EAAM,YAAcK,EAAK,MACzBJ,EAAQ,YAAcI,EAAK,QAC3BH,EAAQ,YAAcG,EAAK,OAC5B,CACF,EAAE,GAAI,CACT,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMR,EAAO,KAAK,MAAMQ,EAAK,KAAG,EAC7B,SAAU,EACV,SAAS,EAAG,GAAG,EACZP,EAAQ,KAAK,MAAOO,EAAK,MAAO,IAAI,EACvC,SAAU,EACV,SAAS,EAAG,GAAG,EACZN,EAAU,KAAK,MAAQM,EAAK,MAAO,KAAQ,GAAM,EACpD,SAAU,EACV,SAAS,EAAG,GAAG,EACZL,EAAU,KAAK,MAASK,EAAK,MAAO,KAAQ,IAAU,GAAM,EAC/D,SAAU,EACV,SAAS,EAAG,GAAG,EAElB,MAAO,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}